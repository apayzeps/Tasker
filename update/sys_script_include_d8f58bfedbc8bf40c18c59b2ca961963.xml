<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_153465_discovert.MarkInactiveConditionalMethods</api_name>
        <client_callable>false</client_callable>
        <description>Methods to provide permission checks for UI Actions related to Mark Inactive business rules.</description>
        <name>MarkInactiveConditionalMethods</name>
        <script><![CDATA[var MarkInactiveConditionalMethods = Class.create();
MarkInactiveConditionalMethods.prototype = {
	tcs: new TaskerCommonScriptingMethods(),
    initialize: function() {
    },
	checkProcessTemplatePermission: function(current) {
		var user = gs.getUser();
		var processOwner = current.getValue("process_owner");
		var roles = ["x_153465_discovert.tasker_process_template_admin"];
		return user.getID() == processOwner || this.tcs.checkUserForSingleRoleMatch(user, roles);
	},
	checkProcessTemplateTaskPermission: function(current) {
		var answer = false;
		try {
			var checkTemplateCreator = [];
			var processTemplateTableName = "x_153465_discovert_discover_routing_template";
			var processTemplateID = current.tasker_process_definition;
			var processTemplateQuery = [];
			processTemplateQuery.push({"sys_id":processTemplateID});
			processTemplateQuery.push({"active":true});
			var processTemplateCreatorCheck = false;
			var processOu = "";
			var user = gs.getUser();
			if(processTemplateID) {
				checkTemplateCreator = this.tcs.queryRelatedShort(processTemplateTableName, processTemplateQuery, function(record) {
					//while we're checking, ensure that we get process ou
					try {
						processOu = record.process_ou;
						if(record.process_owner == user.getID()) {
							return true;
						}
					} catch(v){
						gs.warn(v);
					}

					return null;
				}, true);
			}
			if(checkTemplateCreator && (checkTemplateCreator.length > 0 || checkTemplateCreator.indexOf("true") != -1)) {
				answer = true;
			} else if(this.tcs.checkUserForSingleRoleMatch(gs.getUser(), ["x_153465_discovert.tasker_process_template_admin"])) {
				answer = true;
			} else if(this.tcs.checkUserForSingleRoleMatch(gs.getUser(), ["x_153465_discovert.tasker_process_template_ou"])) {
				var userInfoScripts = new UserInfoScripts();
				var currentUserId = user.getID();
				if(processOu !== "" && userInfoScripts.IsUserInOU(processOu, currentUserId)) {
					answer = true;
				}
			} else {
				gs.info("activated #5");
				answer = false;
			}
		}catch(e) {
			this.tcs.checkException("MarkInactiveCond", gs.warn, e);
			return false;
		}
		return answer;
	},
	checkOrgHierarchyPermission: function() {
		return gs.getUser().hasRole("x_153465_discovert.tasker_organizational_admin") || gs.getUser().hasRole("x_153465_discovert.tasker_single_ou_admin");
	},
	checkTaskPermission: function(current) {
		var userId = gs.getUser().getID();
		var reviewer = current.getValue("u_reviewer");
		var ou = current.getValue("primary_assignee");
		var cUIS = new UserInfoScripts();
		return userId == reviewer || 
					gs.getUser().hasRole("x_153465_discovert.tasker_global_Tasking_Authority_member_admin") ||
					cUIS.IsUserTaskingAuthority(ou, userId);
	},
    type: 'MarkInactiveConditionalMethods'
};]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>kbaton</sys_created_by>
        <sys_created_on>2019-03-11 18:19:31</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>d8f58bfedbc8bf40c18c59b2ca961963</sys_id>
        <sys_mod_count>7</sys_mod_count>
        <sys_name>MarkInactiveConditionalMethods</sys_name>
        <sys_package display_value="Tasker" source="x_153465_discovert">c6b1162d4fc10300303dc3818110c7b1</sys_package>
        <sys_policy>read</sys_policy>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Tasker">c6b1162d4fc10300303dc3818110c7b1</sys_scope>
        <sys_update_name>sys_script_include_d8f58bfedbc8bf40c18c59b2ca961963</sys_update_name>
        <sys_updated_by>kbaton</sys_updated_by>
        <sys_updated_on>2019-03-26 15:14:14</sys_updated_on>
    </sys_script_include>
</record_update>
