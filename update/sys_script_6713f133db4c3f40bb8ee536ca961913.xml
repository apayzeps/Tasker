<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_153465_discovert_discover_office_members</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>Tasker OU Mem - beforeUpdate roles</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[/*jshint esnext: true */
(function executeRule(current, previous /*null when async*/) {
	var tcs  = new TaskerCommonScriptingMethods();
	var ouMemberTableName = "x_153465_discovert_discover_office_members";
	var ouMemberQuery = [{"office_member": current.office_member}];
	//synchronizes all checked fields with the found member records
	var syncFieldRecord = function(checkedFieldName, memberRecord) {
		if(memberRecord.sys_id != current.sys_id) {
			if(memberRecord[checkedFieldName] != current[checkedFieldName]) {
				memberRecord[checkedFieldName] = current[checkedFieldName];
			}
// 			else if(memberRecord[checkedFieldName] && !current[checkedFieldName]) {
// 				current[checkedFieldName] = true;
// 			}
		}
	};
	tcs.queryRelated(ouMemberTableName, ouMemberQuery, function(memberRecord) {
			syncFieldRecord("is_global_tasking_authority", memberRecord);
			syncFieldRecord("user_is_organization_admin", memberRecord);
			syncFieldRecord("is_tasker_application_admin", memberRecord);
			syncFieldRecord("is_office_administrator", memberRecord);
			syncFieldRecord("can_manage_ou_members", memberRecord);
			syncFieldRecord("can_import_ou_hierarchy", memberRecord);
			syncFieldRecord("can_manage_process_permissions", memberRecord);
			syncFieldRecord("can_manage_global_processes", memberRecord);
			syncFieldRecord("has_ou_process_rights", memberRecord);
			syncFieldRecord("has_personal_process_rights", memberRecord);

			memberRecord.setWorkflow(false);
			memberRecord.update();
		return null;
	});	
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>kbaton</sys_created_by>
        <sys_created_on>2019-03-14 14:47:28</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>6713f133db4c3f40bb8ee536ca961913</sys_id>
        <sys_mod_count>11</sys_mod_count>
        <sys_name>Tasker OU Mem - beforeUpdate roles</sys_name>
        <sys_overrides/>
        <sys_package display_value="Tasker" source="x_153465_discovert">c6b1162d4fc10300303dc3818110c7b1</sys_package>
        <sys_policy>protected</sys_policy>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Tasker">c6b1162d4fc10300303dc3818110c7b1</sys_scope>
        <sys_update_name>sys_script_6713f133db4c3f40bb8ee536ca961913</sys_update_name>
        <sys_updated_by>kbaton</sys_updated_by>
        <sys_updated_on>2019-03-20 18:54:33</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=6713f133db4c3f40bb8ee536ca961913"/>
</record_update>
