<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>false</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_153465_discovert_route_task_instance</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition table="x_153465_discovert_route_task_instance">source_definitionISNOTEMPTY^EQ<item endquery="false" field="source_definition" goto="false" newquery="false" operator="ISNOTEMPTY" or="false" value=""/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </filter_condition>
        <is_rest>false</is_rest>
        <message/>
        <name>Tasker - onInsert Copy Tasker Def</name>
        <order>100</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
	var alist = ' ';
	var officeMembersQuery = new GlideRecord('x_153465_discovert_discover_office_members');
	if (!current.source_definition.nil() ) {
		var grSourceDefinition = new GlideRecord('x_153465_discovert_route_tasks');
		grSourceDefinition.get(current.getValue("source_definition"));
		// Add your code here
		if (grSourceDefinition.assigned_to_type == 'user'){
			current.assigned_to = grSourceDefinition.assigned_to_individual;
		}
		if (grSourceDefinition.assigned_to_type == 'group'){
			current.assignment_group = grSourceDefinition.assigned_to_group;
		}
		// NOTE - we changed how tasks are assigned and accepted, this logic no longer applies
		//if (grSourceDefinition.assigned_to_type == 'office'){
		//	// RAJ - STRY0011879 - Dot walking reference field to sys_id
		//	officeMembersQuery.addQuery('discover_office_hierarchy',grSourceDefinition.getValue("primary_assignee"));
		//	officeMembersQuery.query();
		//	// we query to get the list of members in the office
		//	while (officeMembersQuery.next()){
		//		alist += (',' + officeMembersQuery.office_member);
		//	}
		//	current.additional_assignee_list = alist;
		//}
		// RAJ - added 2017.11.07
		current.instructions = grSourceDefinition.instructions;
		current.category = grSourceDefinition.category;
		current.warning_hours = grSourceDefinition.warning_hours;
		current.classification = grSourceDefinition.classification;
		current.primary_assignee = grSourceDefinition.primary_assignee;
		current.primary_office = grSourceDefinition.primary_office;
		current.task_order = grSourceDefinition.route_order;
		// TODO - don't do this with a single copy, need to determine the right way to do this
		//grSourceDefinition.response
		current.short_description = grSourceDefinition.short_description;
		current.sub_category = grSourceDefinition.sub_category;
		// RAJ - Duration was not copied down and should have been
		current.calendar_duration =grSourceDefinition.duration;
		// RAJ - STRY0010060 - 2018-03-13 Set the default Tasker_Type
		current.tasker_type = grSourceDefinition.tasker_type;
		// RAJ 2018-02-20 - STRY0010804 - if Tasking Authoirty set on the Task Definition, set it on the Task Instance
		current.tasking_authority = grSourceDefinition.tasking_authority;
		// RAJ STRY0011656 - this allows us to ONLY move tasks forward that are demo data tasks
		current.demo_data = grSourceDefinition.demo_data;
		// RAJ Originator
		if (!current.parent.nil()){
			current.originator = current.parent.originator;
		}
		// NOTE: we may want to also copy the response documents from source to destination.  Or, the attachments object might be just fine.
		// RAJ - STRY0011879 - Dot walking reference field to sys_id
		GlideSysAttachment.copy('x_153465_discovert_route_tasks', current.getValue("source_definition"), 'x_153465_discovert_route_task_instance', current.sys_id);
	}
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2017-10-26 04:23:29</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>f8c24ca14f860300303dc3818110c73e</sys_id>
        <sys_mod_count>65</sys_mod_count>
        <sys_name>Tasker - onInsert Copy Tasker Def</sys_name>
        <sys_overrides/>
        <sys_package display_value="Tasker" source="x_153465_discovert">c6b1162d4fc10300303dc3818110c7b1</sys_package>
        <sys_policy>protected</sys_policy>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Tasker">c6b1162d4fc10300303dc3818110c7b1</sys_scope>
        <sys_update_name>sys_script_f8c24ca14f860300303dc3818110c73e</sys_update_name>
        <sys_updated_by>rjoy</sys_updated_by>
        <sys_updated_on>2018-06-02 14:52:39</sys_updated_on>
        <template/>
        <when>before</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=f8c24ca14f860300303dc3818110c73e"/>
</record_update>
