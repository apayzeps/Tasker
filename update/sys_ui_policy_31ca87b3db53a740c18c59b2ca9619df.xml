<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_ui_policy">
    <sys_ui_policy action="INSERT_OR_UPDATE">
        <active>true</active>
        <conditions table="x_153465_discovert_route_task_instance">stateNOT IN4,3^EQ<item endquery="false" field="state" goto="false" newquery="false" operator="NOT IN" or="false" value="4,3"/>
            <item endquery="true" field="" goto="false" newquery="false" operator="=" or="false" value=""/>
        </conditions>
        <description/>
        <global>true</global>
        <inherit>false</inherit>
        <isolate_script>true</isolate_script>
        <model_id/>
        <model_table/>
        <on_load>true</on_load>
        <order>124111</order>
        <reverse_if_false>true</reverse_if_false>
        <run_scripts>true</run_scripts>
        <script_false><![CDATA[function onCondition() {
	//jslog("((UI Policy)) reviewer field set to true");
	g_form.setReadOnly("u_reviewer", true);
}]]></script_false>
        <script_true><![CDATA[function onCondition() {
	
	var reviewerUserId = g_form.getValue("u_reviewer");
	if(reviewerUserId == g_user.userID) {
		// #1 tested with current user
		g_form.setReadOnly("u_reviewer", false);
	} else if(g_user.hasRoleFromList("x_153465_discovert.tasker_global_Tasking_Authority_member_admin")) {
		// #2 tested with current user
		g_form.setReadOnly("u_reviewer", false);
	} else {
		// #3 tested with user rgansen
		try {
			var clientOrgScripts = new GlideAjax('x_153465_discovert.ClientOrganizationalScripts');
			clientOrgScripts.addParam('sysparm_name', 'GetUserDefaultOU');
			clientOrgScripts.addParam('UserId', reviewerUserId);
			clientOrgScripts.getXMLAnswer(function(answer) {
				try {
					var clientUserInfoScripts = new GlideAjax('x_153465_discovert.ClientUserInfoScripts');
					clientUserInfoScripts.addParam('sysparm_name', 'IsUserTaskingAuthority');
					clientUserInfoScripts.addParam('UserId', g_user.userID);
					clientUserInfoScripts.addParam('OU', answer);
					clientUserInfoScripts.getXMLAnswer(function(isUserTA) {
						try {
							if(isUserTA == 'true') {
								g_form.setReadOnly("u_reviewer", false);
							}
						} catch(e3) {
							jslog("((Enable Reviewer UI Policy)) Exception @ #3e3: " + e3);
						}
					});
				} catch(e2) {
					jslog("((Enable Reviewer UI Policy)) Exception @ #3e2: " + e2);
				}
			});
		} catch(e1) {
			jslog("((Enable Reviewer UI Policy)) Exception @ #3e1: " + e1);
		}
	}
}]]></script_true>
        <set_values/>
        <short_description>Task - Enable Edit Reviewer Field on Active Task - When user is Reviewer, Global Tasking Authority, or OU-TA of the Reviewer's OU</short_description>
        <sys_class_name>sys_ui_policy</sys_class_name>
        <sys_created_by>kbaton</sys_created_by>
        <sys_created_on>2019-02-05 14:59:36</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>31ca87b3db53a740c18c59b2ca9619df</sys_id>
        <sys_mod_count>40</sys_mod_count>
        <sys_name>Task - Enable Edit Reviewer Field on Active Task - When user is Reviewer, Global Tasking Authority, or OU-TA of the Reviewer's OU</sys_name>
        <sys_overrides/>
        <sys_package display_value="Tasker" source="x_153465_discovert">c6b1162d4fc10300303dc3818110c7b1</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Tasker">c6b1162d4fc10300303dc3818110c7b1</sys_scope>
        <sys_update_name>sys_ui_policy_31ca87b3db53a740c18c59b2ca9619df</sys_update_name>
        <sys_updated_by>kbaton</sys_updated_by>
        <sys_updated_on>2019-04-01 20:11:48</sys_updated_on>
        <table>x_153465_discovert_route_task_instance</table>
        <ui_type>10</ui_type>
        <view/>
    </sys_ui_policy>
</record_update>
